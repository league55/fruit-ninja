{"version":3,"sources":["security/jwt.js","security/tokenManagement.js","api/api.js","timer/timer.js","App.js","reportWebVitals.js","index.js"],"names":["temporaryTestToken","jwt","require","decode","token","sessionId","Math","random","toString","substring","task","encoded","getEncodedToken","fetch","host","method","body","then","r","json","resp","jws","validateToken","sub","console","log","onTokenValid","validateTokenPeriodically","interval","onFail","onPass","intervalId","setInterval","a","result","clearInterval","launchTask","object","debug","encode","App","useState","setToken","tokenOK","setTokenOK","failReason","setFailReason","className","type","value","onChange","e","target","onClick","decoded","redeemToken","response","reason","src","allow","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qaAAMA,G,OAAqB,oGACrBC,EAAMC,EAAQ,KAOb,SAASC,EAAOC,GACnB,OAAOH,EAAIE,OAAOC,EAAOJ,G,8BCF7B,IAAMK,EAFKC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAK3FC,EAAO,SAACN,GACV,OCQG,SAAuBA,GAC1B,IAAMO,EAAUC,EAAgBR,GAChC,OAAOS,MAAMC,EAAO,mBAAoB,CACpCC,OAAQ,OACRC,KAAML,IACPM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAG,GACF,OAAOjB,EAAOiB,EAAKC,QDflBC,CAAclB,GAChBa,MAAK,SAAAD,GACF,GAAgB,OAAbA,EAAKO,IAEJ,MADAC,QAAQC,IAAI,8BACNT,EAAKO,QAIrBG,EAAe,kBAAMF,QAAQC,IAAI,yBAExB,SAASE,EAA0BvB,EAAOwB,EAAUC,IEhBpD,SAAoBnB,EAAMkB,EAAUE,EAAQD,GACvD,IAAME,EAAaC,YAAW,sBAAC,4BAAAC,EAAA,+EAEJvB,IAFI,OAEnBwB,EAFmB,OAGvBJ,EAAOI,GAHgB,gDAKvBC,cAAcJ,GACdF,EAAO,EAAD,IANiB,yDAQ5BD,GFQHQ,EAAW,kBAAM1B,EAAKN,KAAQwB,EAAUF,EAAcG,GAGnD,SAASjB,EAAgBR,GAC5B,IAAMiC,EAAS,CAACd,IAAKnB,EAAOC,UAAWA,GAEvC,OADAmB,QAAQc,MAAMD,GDvBX,SAAgBjC,GACnB,OAAOH,EAAIsC,OAAOnC,EAAOJ,GCuBlBuC,CAAOF,GCzBlBb,QAAQC,IAAI,qBACZ,IAAMX,EAA+C,uC,WE8CtC0B,MA7Cf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNrC,EADM,KACCsC,EADD,OAEiBD,oBAAS,GAF1B,mBAENE,EAFM,KAEGC,EAFH,OAGuBH,mBAAS,IAHhC,mBAGNI,EAHM,KAGMC,EAHN,KAwBb,OACE,sBAAKC,UAAU,MAAf,WACMJ,GACA,qBAAKI,UAAW,YAAhB,SACI,gCACM,2CACA,uBAAOC,KAAK,OAAOC,MAAO7C,EAAO8C,SAVzB,SAACC,GACvBT,EAASS,EAAEC,OAAOH,UAUJ,wBAAQI,QA1B1B,WACE,OFLG,SAAqBjD,GACxB,IAAMO,EAAUC,EAAgBR,GAChC,OAAOS,MAAMC,EAAO,iBAAkB,CAClCC,OAAQ,OACRC,KAAML,IACPM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACVF,MAAK,SAAAG,GACF,IAAIkC,EAAUnD,EAAOiB,EAAKC,KAE1B,OADAG,QAAQC,IAAI6B,GACLA,KEJRC,CAAYnD,GAAOa,MAAK,SAAAuC,GACP,OAAjBA,EAASjC,KACRqB,GAAW,GACXE,EAAc,IACdnB,EAA0BvB,EAAQ,KAAM,SAACqD,GACrCX,EAAcW,GACdb,GAAW,OAGfE,EAAcU,EAASjC,SAgBf,oBACGsB,GAAc,4BAAIA,SAGhCF,GAAW,qBAAKI,UAAW,OAAhB,SACR,wBAAQW,IAAI,6CACJC,MAAM,YACNC,MAAM,eC/BXC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9C,MAAK,YAAkD,IAA/C+C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b4226fb8.chunk.js","sourcesContent":["const temporaryTestToken = \"qwertyuiopasdfghjklzxcvbnm123456qwertyuiopasdfghjklzxcvbnm123456qwertyuiopasdfghjklzxcvbnm123456\";\nconst jwt = require('jwt-simple');\n\n\nexport function encode(token) {\n    return jwt.encode(token, temporaryTestToken);\n}\n\nexport function decode(token) {\n    return jwt.decode(token, temporaryTestToken);\n}\n","import launchTask from \"../timer/timer\";\nimport {validateToken} from \"../api/api\";\nimport {encode} from \"./jwt\";\n\nfunction getRandomString() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\nconst sessionId = getRandomString();\n\n\nconst task = (token) => {\n    return validateToken(token)\n        .then(body => {\n            if(body.sub !== \"OK\") {\n                console.log(\"Token is not valid anymore\");\n                throw body.sub;\n            }\n        });\n}\nconst onTokenValid = () => console.log(\"Token is still valid\");\n\nexport default function validateTokenPeriodically(token, interval, onFail) {\n    launchTask(() => task(token), interval, onTokenValid, onFail);\n}\n\nexport function getEncodedToken(token) {\n    const object = {sub: token, sessionId: sessionId};\n    console.debug(object);\n    return encode(object);\n}","import {decode} from \"../security/jwt\";\nimport {getEncodedToken} from \"../security/tokenManagement\";\n\nconsole.log(\"env: '\" + process.env.NODE_ENV + \"'\");\nconst host = process.env.NODE_ENV === \"production\" ? \"https://fast-tor-84943.herokuapp.com\" : 'http://127.0.0.1:5000';\n\nexport function redeemToken(token) {\n    const encoded = getEncodedToken(token);\n    return fetch(host + '/tokens/redeem', {\n        method: 'POST',\n        body: encoded\n    }).then(r => r.json())\n        .then(resp => {\n            let decoded = decode(resp.jws);\n            console.log(decoded);\n            return decoded;\n        });\n}\n\nexport function validateToken(token) {\n    const encoded = getEncodedToken(token);\n    return fetch(host + '/tokens/validate', {\n        method: 'POST',\n        body: encoded\n    }).then(r => r.json())\n      .then(resp => {\n          return decode(resp.jws);\n      });\n}","\n/**\n * Launches periodic task that stops itself on exception\n * @param {number} interval - interval to execute a task\n */\nexport default function launchTask(task, interval, onPass, onFail) {\n    const intervalId = setInterval(async () => {\n        try {\n            let result = await task();\n            onPass(result);\n        } catch (e) {\n            clearInterval(intervalId);\n            onFail(e);\n        }\n    }, interval);\n}","import './App.css';\nimport {useState} from \"react\";\nimport {redeemToken} from \"./api/api\";\nimport validateTokenPeriodically from \"./security/tokenManagement\";\n\nfunction App() {\n  const [token, setToken] = useState(\"\");\n  const [tokenOK, setTokenOK] = useState(false);\n  const [failReason, setFailReason] = useState('');\n\n  function handleRedeemToken() {\n    return redeemToken(token).then(response => {\n        if(response.sub === \"OK\") {\n            setTokenOK(true);\n            setFailReason('');\n            validateTokenPeriodically(token,  5000, (reason) => {\n                setFailReason(reason);\n                setTokenOK(false);\n            });\n        } else {\n            setFailReason(response.sub);\n        }\n    });\n  }\n\n  const handleTokenChange = (e) => {\n      setToken(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n        {!tokenOK &&\n          <div className={\"licensing\"}>\n              <div>\n                    <span>Token: </span>\n                    <input type=\"text\" value={token} onChange={handleTokenChange}/>\n                    <button onClick={handleRedeemToken}>Submit</button>\n                      {failReason && <p>{failReason}</p>}\n              </div>\n          </div>}\n        {tokenOK && <div className={\"game\"}>\n            <iframe src=\"https://league55.github.io/FruitNinjaGame/\"\n                    allow=\"camera *;\"\n                    title=\"Game\"/>\n        </div>}\n\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}